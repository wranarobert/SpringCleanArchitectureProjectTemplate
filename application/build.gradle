plugins {
	id 'java'
  	id 'org.springframework.boot' version "${springBoot}"
  	id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.0"
    id "org.openapi.generator" version "4.3.1"
}

dependencies {
	implementation project(':domain')
	implementation project(':infrastructure')
	implementation project(':service')
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: "${springCloudStarterOauth2}"
	
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'com.lmax:disruptor:3.4.2'
	
	implementation "an.awesome:pipelinr:${pipelinr}"
	implementation "org.modelmapper:modelmapper:${modelMapper}"
	implementation "com.github.mvallim:java-fluent-validator:${fluentValidator}"
	
	implementation "org.springdoc:springdoc-openapi-ui:${springOpenAPI}"
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

bootJar {
	archiveBaseName = "${rootProject.name}"
    
	mainClassName = 'ca.project.application.Startup'
}

openApiGenerate {
    generatorName = "typescript-axios"
    inputSpec = "${buildDir}/openapi.json";
    outputDir = "${projectDir}/../${clientGatewayPath}"
}